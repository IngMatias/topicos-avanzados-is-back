name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - "*"

env:
  NODE_VERSION: ${{ vars.NODE_VERSION }}
  ENV: ${{ vars.ENV }}
  DB_PORT: ${{ vars.DB_PORT }}
  DB_NAME: ${{ vars.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_HOST: ${{ vars.DB_HOST }}
  DB_ALTER: ${{ vars.DB_ALTER }}
  ENDPOINT_BASE: ${{ vars.ENDPOINT_BASE }}
  ENDPOINT_V1: ${{ vars.ENDPOINT_V1 }}

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload source code
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .

  dependencies:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

  build:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build --if-present

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install
    
      - name: Add .env.test file
        run: |
           echo "ENV=${{ env.ENV }}" >> .env.test
           echo "DB_PORT=${{ env.DB_PORT }}" >> .env.test
           echo "DB_NAME=${{ env.DB_NAME }}" >> .env.test
           echo "DB_USER=${{ env.DB_USER }}" >> .env.test
           echo "DB_PASS=${{ env.DB_PASS }}" >> .env.test
           echo "DB_HOST=${{ env.DB_HOST }}" >> .env.test
           echo "DB_ALTER=${{ env.DB_ALTER }}" >> .env.test
           echo "ENDPOINT_BASE=${{ env.ENDPOINT_BASE }}" >> .env.test
           echo "ENDPOINT_V1=${{ env.ENDPOINT_V1 }}" >> .env.test

      - name: Run tests
        run: npm run test

  format:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint
